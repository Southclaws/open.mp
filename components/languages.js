export const LANGUAGES = {
  "ðŸ‡¬ðŸ‡§": "English",
  "ðŸ‡«ðŸ‡·": "French",
  "ðŸ‡³ðŸ‡±": "Dutch",
  "ðŸ‡ªðŸ‡¸": "Spanish",
  "ðŸ‡©ðŸ‡ª": "German",
  "ðŸ‡·ðŸ‡º": "Russian",
  "PL": "Polish",
  "ðŸ‡§ðŸ‡·": "Portuguese",
  "ðŸ‡·ðŸ‡´": "Romanian",
  "ðŸ‡­ðŸ‡·": "Croatian",
  "ðŸ‡­ðŸ‡º": "Hungarian",
  "ðŸ‡¸ðŸ‡¦": "Arabic",
  "ðŸ‡³ðŸ‡´": "Norwegian"
};

export const loadLanguages = (initial, [ language, setLanguage ]) => {
  if (language === "ðŸ‡½ðŸ‡½") {
    if (LANGUAGES.hasOwnProperty(initial)) {
      language = initial;
    } else {
      language = "ðŸ‡¬ðŸ‡§";
    }

    // Store the newly derived initial language.
    setLanguage(language);
  }

  const { BODY, FAQ } = require("../language/" + LANGUAGES[language]);

  return [{
      body: BODY,
      faq: FAQ,
    },
    Object.keys(LANGUAGES),
    language,
    (e, l) => {
      e.preventDefault();
      setLanguage(l);
    }
  ];
};

